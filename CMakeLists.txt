cmake_minimum_required (VERSION 2.6)

set(PROJECT_NAME "functional")
project(${PROJECT_NAME})

set(${PROJECT_NAME}_HEADERS
    FunctionalUtils.hpp
)

  
set (${PROJECT_NAME}_MAJOR_VERSION 0)
set (${PROJECT_NAME}_MINOR_VERSION 0)
set (${PROJECT_NAME}_PATCH_VERSION 1)
set(${PROJECT_NAME}_VERSION
      ${${PROJECT_NAME}_MAJOR_VERSION}.${${PROJECT_NAME}_MINOR_VERSION}.${${PROJECT_NAME}_PATCH_VERSION})




set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -Wall -Wextra")
# Set specific flags for the three different build types (Release, debug and Profile)
# -Wno-unused-local-typedefs suppresses a lot of warnings generated by the debug version of boost
set(CMAKE_CXX_FLAGS_RELEASE "-DNDEBUG -O3 -march=native")
set(CMAKE_CXX_FLAGS_DEBUG "-g")
set(CMAKE_CXX_FLAGS_PROFILE "-pg")

if(CMAKE_BUILD_TYPE STREQUAL "Release")
  message("Compiling with flags:\n  ${CMAKE_CXX_FLAGS} ${CMAKE_CXX_FLAGS_RELEASE}")
elseif(CMAKE_BUILD_TYPE STREQUAL "Debug")
  message("Compiling with flags:\n  ${CMAKE_CXX_FLAGS} ${CMAKE_CXX_FLAGS_DEBUG}")
elseif(CMAKE_BUILD_TYPE STREQUAL "Profile")
  message("Compiling with flags:\n  ${CMAKE_CXX_FLAGS} ${CMAKE_CXX_FLAGS_PROFILE}")
endif()


include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include)
add_subdirectory(include)


option(${PROJECT_NAME}_ENABLE_TESTS "Enable tests" ON)
if(${PROJECT_NAME}_ENABLE_TESTS)
      enable_testing()
      add_subdirectory(test)
endif()

